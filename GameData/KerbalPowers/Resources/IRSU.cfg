//	================================== seeing the coding among the stars
//	*** ANGLECAN SIMPLEX Resources ***
//	================================== by theJesuit
//	                      ISRU Configs
//
//	***	CONTENTS
//		Remove converter modules from stock parts
//
//		quantumISRU,heavyISRU,ISRU,MiniISRU	add Oxidizer 									OxidizerBaking
//		quantumISRU,heavyISRU,ISRU			add LiquidFuel, MonoPropellant, OrganicSlurry	LiquidFuelDistillation, LiquidFuelCatalysing, MonoPropellantFermentation, OrganicSlurryBrewing
//		quantumISRU,heavyISRU				add Powder Fuel									PowderFuel Fixating
//
//		Adjust the parts for their efficiencies
//		All processes require the same EC depending on part, the larger parts have increased conversion efficiency, with less losses (you don't have to mine as much)
//		
//		Mining Expansion	SMX_Mk2ISRURefinery|SMX_Size3ISRU|SMX_Mk3ISRURefinery|SMX_Size0ISRU
//			fuel cells		SMX_Mk2Generator|SMX_Size1Generator|
//			ore tanks 		SMX_Mk2Oretank|SMX_Size0OreTank|SMX_Size3OreTank|SMX_Mk3OreTank
//			RefineOre		
//			SMX_Size0Generator is 1/3 array, Size1 is 50/sec , mk2 is 75/sec size 2 really big 120/sec!


	@PART[MiniISRU]
		{	@description = #simplexresources_isru_size1_desc
		}
	@PART[ISRU]
		{	@description = #simplexresources_isru_size2_desc
		}

	+PART[ISRU]
		{	@name = heavyISRU
			@author = RoverDude, theJesuit
			@title = Convert-O-Tron 375 Heavy ISRU
			@description = #simplexresources_isru_size3_desc
			@TechRequired = experimentalMotors
			@mass *=1.5
			@cost *=3
			!mesh[*] {}
			MODEL
				{	model = Squad/Parts/Resources/ISRU/ISRU
					scale = 1.5,1,1.5
				}
		}
	@PART[heavyISRU]:NEEDS[ReStock]
		{	!MODEL[*]	{}
			MODEL
				{	model = ReStock/Assets/Resource/restock-isru-25-1
					scale = 1.5, 1.0, 1.5
				}
		}
	@PART[heavyISRU]:NEEDS[AngleCanMods/QUARTIXTechTree]
		{	@TechRequired = microGeeFabrication		}

	+PART[MiniISRU]:NEEDS[AngleCanMods/TETRIXTechTree]
		{	@name = quantumISRU
			@author = RoverDude, theJesuit
			@title = Convert-O-Tron 375 Quantum Deriving
			@description = #simplexresources_isru_size4_desc
			@TechRequired = experimentalMotors
			@mass *=8
			@cost *=64
			!mesh[*] {}
			MODEL
				{	model = Squad/Parts/Resources/MiniISRU/MiniISRU
					scale = 4,1,4
				}
		}
	@PART[quantumISRU]:NEEDS[AngleCanMods/TETRIXTechTree,ReStock]
		{	!MODEL[*]	{}
			MODEL
				{	model = ReStock/Assets/Resource/restock-isru-125-1
					scale = 4.0, 1.0, 4.0
				}
		}

	@PART[MiniISRU,ISRU,heavyISRU,quantumISRU]
		{	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Lf+Ox]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuel]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Oxidizer]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[Mono*]] {}
		}

	@PART[MiniISRU,ISRU,heavyISRU,quantumISRU]:AFTER[CryoTanks]
		{	!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LH2]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LH2+Ox]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LCH4]] {}
			!MODULE[ModuleResourceConverter]:HAS[#ConverterName[LCH4+Ox]] {}
		}

	@PART[MiniISRU,ISRU,heavyISRU,quantumISRU]
		{	MODULE
				{	name = ModuleResourceConverter
					ConverterName = Oxidizer Baking
					StartActionName = Start Ox Baking		//	NaturalOre --> Oxidizer
					StopActionName = Stop Ox Baking		//	NaturalOre --> Oxidizer
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 50000
							key = 750 50000
							key = 1000 50000
							key = 1250 50000
							key = 2000 50000
							key = 4000 50000
						}
					GeneratesHeat = true
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 1.0 0 0
							key = 500 1.0 0 0
							key = 1000 1.0 0 0
							key = 1500 1.0 0 0
							key = 3000 1.0 0 0
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = NaturalOre		//	Density (naturalOre is 0.035)
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = Oxidizer			//	Density (MetalParts is 0.01) (Oxidizer is 0.005)
							Ratio = 1						//	Ratio is 1 * NaturalOre = 3 * MetalParts + 1 * Oxidizer
							DumpExcess = false				//	Ratio    1 * 0.035      = 3 * 0.01       + 1 * 0.005
							FlowMode = STAGE_PRIORITY_FLOW	//	quantumISRU will produce both at the same time.  Maybe also heavyISRU with advancedActuators.
						}
					OUTPUT_RESOURCE
						{	ResourceName = BadAir			
							Ratio = 0.001					
							DumpExcess = true				
							FlowMode = STAGE_PRIORITY_FLOW.
						}

				}
		}

	@PART[ISRU,heavyISRU,quantumISRU]
		{	MODULE
				{	name = ModuleResourceConverter
					ConverterName = LiquidFuel Distillation
					StartActionName = Start LF Distillation 	//	HydrateOre --> LiquidFuel
					StopActionName = Stop LF Distillation 		// HydrateOre --> LiquidFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = LiquidFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE
				{	name = ModuleResourceConverter
					ConverterName = LiquidFuel Catalysing
					StartActionName = Start LF Catalysing 		//	Saturate --> LiquidFuel
					StopActionName = Stop LF Catalysing 		// Saturate --> LiquidFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = Saturate
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = LiquidFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE
				{	name = ModuleResourceConverter
					ConverterName = MonoPropellant Fermentation
					StartActionName = Start MP Fermentation 		//	Ores --> MonoPropellant
					StopActionName = Stop MP Fermentation 			//	Ores --> MonoPropellant
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = NaturalOre
							Ratio = .2
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = .4
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = MonoPropellant
							Ratio = 2.75
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE
				{	name = ModuleResourceConverter
					ConverterName = OrganicSlurry Brewing
					StartActionName = Start OS Brewing			// Ores --> OrganicSlurry
					StopActionName = Stop OS Brewing			// Ores --> OrganicSlurry
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 50000
							key = 750 50000
							key = 1000 50000
							key = 1250 50000
							key = 2000 50000
							key = 4000 50000
						}
					GeneratesHeat = false
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 1.0 0 0
							key = 500 1.0 0 0
							key = 1000 1.0 0 0
							key = 1500 1.0 0 0
							key = 3000 1.0 0 0
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = 0.55
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = RareOre
							Ratio = 0.22
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = OrganicSlurry
							Ratio = 100.4204
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE:NEEDS[CryoTanks]
				{	name = ModuleResourceConverter
					ConverterName = CryoFuel Cryogeny
					StartActionName = Start CF Cryogeny 	//	HydrateOre + BadAir --> CryoFuel
					StopActionName = Stop Cryogeny 		// 	HydrateOre + BadAir --> CryoFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = .1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = BadAir
							Ratio = .1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = CryoFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
					OUTPUT_RESOURCE
						{	ResourceName = Air
							Ratio = .1
							DumpExcess = true
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE:NEEDS[CryoTanks]
				{	name = ModuleResourceConverter
					ConverterName = CryoFuel Fractilling
					StartActionName = Start CF Fractilling 	//	Saturate + BadAir --> CryoFuel
					StopActionName = Stop CF Fractilling 		// 	Saturate + BadAir --> CryoFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = Saturate
							Ratio = .1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = BadAir
							Ratio = .1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = CryoFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
					OUTPUT_RESOURCE
						{	ResourceName = Air
							Ratio = .1
							DumpExcess = true
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
		}
	
	@PART[heavyISRU,quantumISRU]
		{	MODULE:NEEDS[DeepFreeze]
				{	name = ModuleResourceConverter
					ConverterName = Glykerol Manufacturing
					StartActionName = Start Glykerol Manufacturing 			// HydrateOre --> Glykerol Manufacturing
					StopActionName = Stop Glykerol Manufacturing			// HydrateOre --> Glykerol Manufacturing
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = Glykerol
							Ratio = 1
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE:NEEDS[AngleCanMods/SIMPLEXPropulsion]
				{	name = ModuleResourceConverter
					ConverterName = PowderFuel Fixating
					StartActionName = Start PF Fixating 			// Natural Ore --> PowderFuel Fixating
					StopActionName = Stop PF Fixating 				// Natural Ore --> PowderFuel Fixating
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = NaturalOre
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = PowderFuel
							Ratio = 1
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE:NEEDS[NearFuturePropulsion]
				{	name = ModuleResourceConverter
					ConverterName = Lithium Extraction
					StartActionName = Start Lithium Extraction
					StopActionName = Stop Lithium Extraction
					ToggleActionName = Toggle LIthium Extraction
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}
					GeneratesHeat = true
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					Specialty = Engineer
					EfficiencyBonus = 1
					INPUT_RESOURCE
						{	ResourceName = RareOre
							Ratio = .1
							FlowMode = NO_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = Lithium
							Ratio = 0.0005
							DumpExcess = false
							FlowMode = NO_FLOW
						}
				}
			MODULE:NEEDS[NearFutureElectrical]
				{	name = ModuleResourceConverter
					ConverterName = Xenon Extraction
					StartActionName = Start Xenon Extraction
					StopActionName = Stop Xenon Extraction
					ToggleActionName = Toggle Xenon Extraction
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}
					GeneratesHeat = true
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					Specialty = Engineer
					EfficiencyBonus = 1
					INPUT_RESOURCE
						{	ResourceName = NuclearWaste
							Ratio = 0.01
							FlowMode = NO_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 80
						}
					OUTPUT_RESOURCE
						{	ResourceName = XenonGas
							Ratio = 0.25
							DumpExcess = false
						}
				}
			MODULE:NEEDS[NearFutureElectrical]
				{	name = ModuleResourceConverter
					ConverterName = NuclearFuel Extraction
					StartActionName = Start NF Extraction
					StopActionName = Stop NF Extraction
					ToggleActionName = Toggle NF Extraction
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}
					GeneratesHeat = true
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					Specialty = Engineer
					EfficiencyBonus = 1
					INPUT_RESOURCE
						{	ResourceName = RareOre
							Ratio = 1.0

						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = NuclearFuel
							Ratio = 0.001
							DumpExcess = false
							FlowMode = NO_FLOW
						}
				}
			MODULE:NEEDS[NearFutureElectrical]
				{	name = ModuleResourceConverter
					ConverterName = NuclearWaste Processing
					StartActionName = Start NW Processing
					StopActionName = Stop NW Processing
					ToggleActionName = Toggle NW Processing
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}
					GeneratesHeat = true
					DefaultShutoffTemp = .8
					ThermalEfficiency
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					Specialty = Engineer
					EfficiencyBonus = 1
					INPUT_RESOURCE
						{	ResourceName = NuclearWaste
							Ratio = 0.1
							FlowMode = NO_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = NuclearFuel
							Ratio = 0.05
							DumpExcess = false
							FlowMode = NO_FLOW
						}
				}
		}

	// @PART[quantumISRU]:NEEDS[NearFutureElectrical]
		// {	MODULE
				// {	name = ModuleResourceConverter
					// ConverterName = NuclearFuel Processor
					// StartActionName = Start NF Processing
					// StopActionName = Stop NF Processing
					// ToggleActionName = Toggle NF Processing
					// AutoShutdown = true
					// TemperatureModifier
						// {	key = 0 100000
							// key = 750 50000
							// key = 1000 10000
							// key = 1250 500
							// key = 2000 50
							// key = 4000 0
						// }
					// GeneratesHeat = true
					// DefaultShutoffTemp = .8
					// ThermalEfficiency
						// {	key = 0 0 0 0
							// key = 500 0.1 0 0
							// key = 1000 1.0 0 0
							// key = 1250 0.1 0 0
							// key = 3000 0 0 0
						// }
					// UseSpecialistBonus = true
					// SpecialistEfficiencyFactor = 0.2
					// SpecialistBonusBase = 0.05
					// Specialty = Engineer
					// EfficiencyBonus = 1
					// INPUT_RESOURCE
						// {	ResourceName = NuclearWaste
							// Ratio = 0.1
							// FlowMode = NO_FLOW
						// }
					// INPUT_RESOURCE
						// {	ResourceName = ElectricCharge
							// Ratio = 160
						// }
					// OUTPUT_RESOURCE
						// {	ResourceName = NuclearFuel
							// Ratio = 0.05
							// DumpExcess = false
							// FlowMode = NO_FLOW
						// }
				// }
			// MODULE
				// {	name = ModuleResourceConverter
					// ConverterName = Xenon Extraction
					// StartActionName = Start Xe Extraction
					// StopActionName = Stop Xe Extraction
					// ToggleActionName = Toggle Xe Extraction
					// AutoShutdown = true
					// TemperatureModifier
						// {	key = 0 100000
							// key = 750 50000
							// key = 1000 10000
							// key = 1250 500
							// key = 2000 50
							// key = 4000 0
						// }
					// GeneratesHeat = true
					// DefaultShutoffTemp = .8
					// ThermalEfficiency
						// {	key = 0 0 0 0
							// key = 500 0.1 0 0
							// key = 1000 1.0 0 0
							// key = 1250 0.1 0 0
							// key = 3000 0 0 0
						// }
					// UseSpecialistBonus = true
					// SpecialistEfficiencyFactor = 0.2
					// SpecialistBonusBase = 0.05
					// Specialty = Engineer
					// EfficiencyBonus = 1
					// INPUT_RESOURCE
						// {	ResourceName = NuclearWaste
							// Ratio = 0.01
							// FlowMode = NO_FLOW
						// }
					// INPUT_RESOURCE
						// {	ResourceName = ElectricCharge
							// Ratio = 80
						// }
					// OUTPUT_RESOURCE
						// {	ResourceName = XenonGas
							// Ratio = 0.25
							// DumpExcess = false
						// }
				// }
			// MODULE
				// {	name = ModuleResourceConverter
					// ConverterName = NuclearFuel Extraction
					// StartActionName = Start NF Extraction
					// StopActionName = Stop NF Extraction
					// ToggleActionName = Toggle NF Extraction
					// AutoShutdown = true
					// TemperatureModifier
						// {	key = 0 100000
							// key = 750 50000
							// key = 1000 10000
							// key = 1250 500
							// key = 2000 50
							// key = 4000 0
						// }
					// GeneratesHeat = true
					// DefaultShutoffTemp = .8
					// ThermalEfficiency
						// {	key = 0 0 0 0
							// key = 500 0.1 0 0
							// key = 1000 1.0 0 0
							// key = 1250 0.1 0 0
							// key = 3000 0 0 0
						// }
					// UseSpecialistBonus = true
					// SpecialistEfficiencyFactor = 0.2
					// SpecialistBonusBase = 0.05
					// Specialty = Engineer
					// EfficiencyBonus = 1
					// INPUT_RESOURCE
						// {	ResourceName = RareOre
							// Ratio = 1.0

						// }
					// INPUT_RESOURCE
						// {	ResourceName = ElectricCharge
							// Ratio = 160
						// }
					// OUTPUT_RESOURCE
						// {	ResourceName = NuclearFuel
							// Ratio = 0.001
							// DumpExcess = false
							// FlowMode = NO_FLOW
						// }
				// }
		// }

//	***	Efficiency Pass
//	with Saturate, efficiency remains the same, but the EC requirement is halved, and this is done above.
//	Simplex catchall efficiency changes, quantumISRU is output efficiency of 1.0 and EC of 160. The rest is simply lost.

	@PART[heavyISRU,ISRU,quantumISRU]
						{	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[LiquidFuelCatalysing]]
								{	@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]	{	@Ratio *=.50	}	}	}
	@PART[MiniISRU]		{	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[*]]
								{	@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]	{	@Ratio *=.125	}		
									@OUTPUT_RESOURCE:HAS[#ResourceName[*]]				{	@Ratio *=0.6	}	}	}
	@PART[ISRU]			{	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[*]]
								{	@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]	{	@Ratio *=.25	}
									@OUTPUT_RESOURCE:HAS[#ResourceName[*]]				{	@Ratio *=0.75	}	}	}
	@PART[heavyISRU]	{	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[*]]
								{	@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]	{	@Ratio *=.50	}
									@OUTPUT_RESOURCE:HAS[#ResourceName[*]]				{	@Ratio *=0.9	}	}	}
