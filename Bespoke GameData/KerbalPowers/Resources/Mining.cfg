//	================================== seeing the coding among the stars
//	*** ANGLECAN SIMPLEX Resources ***
//	================================== by theJesuit
//	                    Mining Configs
//
//	*** See the Resources Definitions.cfg for details
//
// 	***	Changelog 1.4
//		Updated for Saturate as an ocean resource, and possibly and underground lake resource, NaturalOre and RareOre in oceans
//
//	***	Changelog 1.2
//		Removed the Kerbalism Profilesimplex items as these are included in a separate .cfg file.
//
//	***	Changelog 1.1
//		Asteroids now can be seen with all resources, and all can be harvested.
//		Added in BahaEPL (for NaturalOre and RareOre) and Ventral Drill (for HydrateOre)
//		
//	***	Features:
//		All drills that have asteroid drilling retain the same function
//		When drill asteroids, they will drill ALL resources, regardless of drill planetary specifications.
//		I am hoping to deal with this sometime.
//
//		Stock Drills drill HydrateOre, Saturate.  Saturate will not be confinded by heating.
//		
//		Stock Drills drill NaturalOre and RareOre if any supporting mods are not present
//		MiningExpansion Surface Harvesters
//			Hydrate only 			SMX_0mStackDrill,SMX_1mInlineDrill,SMX_1mHInlineDrill
//			NaturalOre and RareOre	SMX_1mStackDrill,SMX_2mStackDrill,SMX_3mStackDrill
//		MiningExpansion Ocean Extractors
//			HydrateOre only			SMX_1mInlinePump
//			HydrateOre and RareOre	SMX_1mStackPump,SMX_2mStackPump
//		MiningExpansion Atmosphere Extractors
//			Xenon, ArgonGas					SMX_Size1AtmCondenser,SMX_Size2AtmCondenser
//		sensorAtmosphere to be a less efficient Atmosphere Extractor 
//			Xenon, ArgonGas
//		BahEPL Augers drill NaturalOre and RareOre
//		Ventral Drill drills HydrateOre
//
//		Additional Changes for mods

//	========================================
//	*** SimplexOres Stock Drills adjustments

	@PART[MiniDrill,RadialDrill]
		{	!MODULE[ModuleResourceHarvester] {}
		}

	@PART[MiniDrill]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Mining
					StartActionName = Start <b>HydrateOre</b> Mining
					StopActionName = Stop <b>HydrateOre</b> Mining
					ToggleActionName = Toggle <b>HydrateOre</b> Mining
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 3
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
					HarvestThreshold = 0.025
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = Saturate
					ConverterName = SubSurface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					HarvestThreshold = 0.025
				}
		}

	@PART[MiniDrill]:NEEDS[!MiningExpansion,!BahaEPL]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 3
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}		
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
					HarvestThreshold = 0.025
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 3
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}		
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
					HarvestThreshold = 0.025
				}
		}

	@PART[RadialDrill]  //  22.5/sec to give 1.5/sec HydrateOre  Resultant Ore is Efficieny (1.5) * Input (15)
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = Saturate
					ConverterName = Surface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
				}
		}
	@PART[RadialDrill]:NEEDS[!MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}

//	==================================================
//	*** EPL Drills adjustments
	@PART[ELTinyAuger]:NEEDS[ExtraplanetaryLaunchpads]
		{	!MODULE[ELExtractor]	{}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 2.5
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}		
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
					HarvestThreshold = 0.025
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 2.5
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}		
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
					HarvestThreshold = 0.025
				}
		}
		
	@PART[ELSmallAuger]:NEEDS[ExtraplanetaryLaunchpads]
		{	!MODULE[ELExtractor]	{}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}

	@PART[ELAuger]:NEEDS[ExtraplanetaryLaunchpads]
		{	!MODULE[ELExtractor]	{}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}		
		
//	==================================================
//	*** SimplexOres MiningExpansion Drills adjustments

	@PART[SMX_InlineDrill,SMX_0mStackDrill,SMX_1mInlineDrill,SMX_1mHInlineDrill,SMX_2mStackDrill,SMX_3mStackDrill,SMX_1mInlinePump,SMX_1mStackPump,SMX_2mStackPump,SMX_Size1AtmCondenser,SMX_Size2AtmCondenser]:NEEDS[MiningExpansion]
		{	!MODULE[ModuleResourceHarvester] {}
		}

//	*** HydrateOre Surface Drills x4

	@PART[SMX_0mStackDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = impactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					Specialty = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2.25
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 5000
							key = 500 2500
							key = 750 250
							key = 1000 0
						}	
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 0.3
					ResourceName = Saturate
					ConverterName = SubSurface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = impactTransform
					ImpactRange = 5
					AutoShutdown = true
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					Specialty = DrillSkill
					EfficiencyBonus = 1
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 1.5
						}
				}
		}

	@PART[SMX_1mInlineDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 3750
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = Saturate
					ConverterName = SubSurface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
				}	
		}
		
	@PART[SMX_1mHInlineDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 3750
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = Saturate
					ConverterName = SubSurface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
				}
		}

	@PART[SMX_InlineDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 3750
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1
					ResourceName = Saturate
					ConverterName = SubSurface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 3.5
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}


//	***	NaturalOre Surface Drills x3

	@PART[SMX_1mStackDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 15000
							key = 500 10000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 15000
							key = 500 10000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}

	@PART[SMX_2mStackDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6	
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 17500
							key = 500 15000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 17500
							key = 500 15000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}
	
	
	@PART[SMX_3mStackDrill]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 50
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 4.5
						}
					TemperatureModifier
						{	key = 0 45000
							key = 250 37500
							key = 500 30000
							key = 750 5000
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .5
							key = 500 1
							key = 750 .33
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 50
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 4.5
						}
					TemperatureModifier
						{	key = 0 45000
							key = 250 37500
							key = 500 30000
							key = 750 5000
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .5
							key = 500 1
							key = 750 .33
							key = 1000 0
						}
				}
		}

//	=====================================
//	***	Oceanic Pumps extract Hydrate Ore and solidify it for storage, (or directly Organic Slurry for the inline with kerbalism)  The Stack pumps can filter out rare ore as well.

	@PART[SMX_1mInlinePump]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = 1
					ResourceName = Saturate
					ConverterName = Ocean <b>Saturate</b> Intake
					StartActionName = Start <b>Saturate</b> Intake
					StopActionName = Stop <b>Saturate</b> Intake
					ToggleActionName = Toggle <b>Saturate</b> Intake
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
		}

	@PART[SMX_1mStackPump]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = 1
					ResourceName = Saturate
					ConverterName = Ocean <b>Saturate</b> Intake
					StartActionName = Start <b>Saturate</b> Intake
					StopActionName = Stop <b>Saturate</b> Intake
					ToggleActionName = Toggle <b>Saturate</b> Intake
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = .05
					ResourceName = RareOre
					ConverterName = Ocean <b>NaturalOre</b> Extractor
					StartActionName = Start <b>NaturalOre</b> Extraction
					StopActionName = Stop <b>NaturalOre</b> Extraction
					ToggleActionName = Toggle <b>NaturalOre</b> Extractor
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = .05
					ResourceName = RareOre
					ConverterName = Ocean <b>RareOre</b> Extractor
					StartActionName = Start <b>RareOre</b> Extraction
					StopActionName = Stop <b>RareOre</b> Extraction
					ToggleActionName = Toggle <b>RareOre</b> Extractor
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
		}
	
	@PART[SMX_2mStackPump]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = 4
					ResourceName = Saturate
					ConverterName = Ocean <b>Saturate</b> Intake
					StartActionName = Start <b>Saturate</b> Intake
					StopActionName = Stop <b>Saturate</b> Intake
					ToggleActionName = Toggle <b>Saturate</b> Intake
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = .2
					ResourceName = NaturalOre
					ConverterName = Ocean <b>NaturalOre</b> Extractor
					StartActionName = Start <b>NaturalOre</b> Extraction
					StopActionName = Stop <b>NaturalOre</b> Extraction
					ToggleActionName = Toggle <b>NaturalOre</b> Extractor
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}			
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 1
					Efficiency = .2
					ResourceName = RareOre
					ConverterName = Ocean <b>RareOre</b> Extractor
					StartActionName = Start <b>RareOre</b> Extraction
					StopActionName = Stop <b>RareOre</b> Extraction
					ToggleActionName = Toggle <b>RareOre</b> Extractor
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
				}
		}

//	=========================================================
//	***	Air Extractors directly extract Xenon, Argon Air and BadAir

	@PART[SMX_Size1AtmCondenser]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 1
					ResourceName = XenonGas
					ConverterName = <b>Xenon</b> Atmosphere Extraction
					StartActionName = Start <b>Xenon</b> Extractor
					StopActionName = Stop <b>Xenon</b> Extractor
					ToggleActionName = Toggle <b>Xenon</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 30
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 1
					ResourceName = XenonGas
					ConverterName = <b>Xenon</b> Atmosphere Extraction
					StartActionName = Start <b>Xenon</b> Extractor
					StopActionName = Stop <b>Xenon</b> Extractor
					ToggleActionName = Toggle <b>Xenon</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 9
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 1
					ResourceName = Air
					ConverterName = <b>Air</b> Atmosphere Extraction
					StartActionName = Start <b>Air</b> Extractor
					StopActionName = Stop <b>Air</b> Extractor
					ToggleActionName = Toggle <b>Air</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2.5
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 1
					ResourceName = BadAir
					ConverterName = <b>BadAir</b> Atmosphere Extraction
					StartActionName = Start <b>BadAir</b> Extractor
					StopActionName = Stop <b>BadAir</b> Extractor
					ToggleActionName = Toggle <b>BadAir</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2.5
						}
				}
		}

	@PART[SMX_Size2AtmCondenser]:NEEDS[MiningExpansion]
		{	MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = XenonGas
					ConverterName = <b>Xenon</b> Atmosphere Extraction
					StartActionName = Start <b>Xenon</b> Extractor
					StopActionName = Stop <b>Xenon</b> Extractor
					ToggleActionName = Toggle <b>Xenon</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 30
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = ArgonGas
					ConverterName = <b>ArgonGas</b> Atmosphere Extraction
					StartActionName = Start <b>ArgonGas</b> Extractor
					StopActionName = Stop <b>ArgonGas</b> Extractor
					ToggleActionName = Toggle <b>ArgonGas</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 9
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = Air
					ConverterName = <b>Air</b> Atmosphere Extraction
					StartActionName = Start <b>Air</b> Extractor
					StopActionName = Stop <b>Air</b> Extractor
					ToggleActionName = Toggle <b>Air</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2.5
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = BadAir
					ConverterName = <b>BadAir</b> Atmosphere Extraction
					StartActionName = Start <b>BadAir</b> Extractor
					StopActionName = Stop <b>BadAir</b> Extractor
					ToggleActionName = Toggle <b>BadAir</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 2.5
						}
				}
		}

	@PART[sensorAtmosphere] // stock atmo sensor﻿
		{	MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = XenonGas
					RequiresUnlock = false // I haven't touched this
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = ArgonGas
					RequiresUnlock = false // I haven't touched this
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = Air
					RequiresUnlock = false // I haven't touched this
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = BadAir
					RequiresUnlock = false // I haven't touched this
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = XenonGas
					ConverterName = <b>Xenon</b> Atmosphere Extraction
					StartActionName = Start <b>Xenon</b> Extractor
					StopActionName = Stop <b>Xenon</b> Extractor
					ToggleActionName = Toggle <b>Xenon</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 90
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 2
					Efficiency = 4
					ResourceName = ArgonGas
					ConverterName = <b>ArgonGas</b> Atmosphere Extraction
					StartActionName = Start <b>ArgonGas</b> Extractor
					StopActionName = Stop <b>ArgonGas</b> Extractor
					ToggleActionName = Toggle <b>ArgonGas</b> Extraction
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 27
						}
				}
		}

@PART[SMX_RCSDriver] 					{	@MODULE[ModuleRCSFX]		{	@PROPELLANT[Ore]	{ @name = NaturalOre	}	}	}
@PART[SMX_Size0Driver|SMX_Size1Driver]	{	@MODULE[ModuleEnginesFX]	{	@PROPELLANT[Ore]	{ @name = NaturalOre	}	}	}

//	==========================
//	*** Baha Drills

	@PART[bahaEPLsmAuger]:NEEDS[BahaEPL]
		{	!MODULE[ModuleResourceHarvester] 	{}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 15000
							key = 500 10000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 5
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 15000
							key = 500 10000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}

	@PART[bahaEPLXLAuger]:NEEDS[BahaEPL]
		{	!MODULE[ModuleResourceHarvester] 	{}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = NaturalOre
					ConverterName = Surface <b>NaturalOre</b> Harvester
					StartActionName = Start <b>NaturalOre</b> Harvest
					StopActionName = Stop <b>NaturalOre</b> Harvest
					ToggleActionName = Toggle NaturalOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 17500
							key = 500 15000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 20
					ResourceName = RareOre
					ConverterName = Surface <b>RareOre</b> Harvester
					StartActionName = Start <b>RareOre</b> Harvest
					StopActionName = Stop <b>RareOre</b> Harvest
					ToggleActionName = Toggle RareOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 5
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 6
						}
					TemperatureModifier
						{	key = 0 20000
							key = 250 17500
							key = 500 15000
							key = 750 2500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					UseSpecialistHeatBonus = true
					SpecialistHeatFactor = 0.1
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
		}

//	================================
//	*** Ventral Drill for Stock ISRU

	@PART[VentralISRUDrill]:NEEDS[VentralDrill]
		{	!MODULE[ModuleResourceHarvester] {}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = HydrateOre
					ConverterName = Surface <b>HydrateOre</b> Harvester
					StartActionName = Start <b>HydrateOre</b> Harvest
					StopActionName = Stop <b>HydrateOre</b> Harvest
					ToggleActionName = Toggle HydrateOre Harvester
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = true
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 15
						}
					TemperatureModifier
						{	key = 0 10000
							key = 250 7500
							key = 500 5000
							key = 750 500
							key = 1000 0
						}		
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
					ThermalEfficiency 
						{	key = 0 0.1
							key = 250 .1
							key = 500 1
							key = 750 .1
							key = 1000 0
						}
				}
			MODULE
				{	name = ModuleResourceHarvester
					HarvesterType = 0
					Efficiency = 1.5
					ResourceName = Saturate
					ConverterName = Surface <b>Saturate</b> Tapping
					StartActionName = Start <b>Saturate</b> Tapping
					StopActionName = Stop <b>Saturate</b> Tapping
					ToggleActionName = Toggle <b>Saturate</b> Tapping
					ImpactTransform = ImpactTransform
					ImpactRange = 6
					AutoShutdown = true
					GeneratesHeat = false
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 10
						}
					UseSpecialistBonus = true
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = DrillSkill
					EfficiencyBonus = 1
				}
		}

//	================================
//	*** Trial Atmosphere Harvester for Simplex Ores

+PART[miniIntake]
	{	@name = anglecan-miniIntakepump
		@title = anglecan-miniIntakepump
		@description = anglecan-miniIntakepump
		MODULE
			{	name = ModulePartVariants

				VARIANT 
					{	name = KSP_Black
						displayName = Black

						primaryColor = #2d2e2d
						secondaryColor = #2d2e2d

						TEXTURE {	_Color = #2d2e2d	}
					}
			}
	}
